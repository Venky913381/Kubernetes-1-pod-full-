>

>we use secrets to decouple the application specific properties from application image. and we pass
>this aplication specific properties as environmental variable during pods creation. 

>This is secure way to pass the data, as data we passing is in encrypted/encoding form (BASE64 encryption).
>using secrets we can pass up to 1 MB of data to application/pod.

>secrets are of three types in k8s, these are Generic, Docker-Registry and TLS.

>kubectl create secret --help
>kubectl get secrets <sec> -o yaml    --> to see corresponding encoded value.
>echo -n "value" | base64             --> to encode to base64 value.
>----------------------------------------------------------------------------------------------

#a)----------------------necessicities for demo -------------------------------

>kubectl create secret generic <my-sec1> --from-literal=name=swapnil  --> direct from literals

single property file: application.properties
#databse_details
database_ip="8.8.8.8"                             
database_password="12345"                        
database_username="swapnil"

>kubectl create secret generic <my-filesec> --from-file=application.properties  --> from file


from env file: env.sh
var1=val1
var2=val2            #this is different from above i.e --from-file, 
var3=val3            #in the sense that it do not consider spaces or comments in it.

>kubectl create secret generic <my-envsec> --from-env-file=env.sh


>----------------------------------------------------------------------------------------------

>create secrets using manifest file

apiVersion: v1
kind: Secret

metadata: 
  name: sec4
data:
  key1: dmFsdWUx
  key2: dmFsdWUy      
  key3: dmFsdWUz
                       #get encoded value, using >echo -n "value" | base64
> kubectl create -f sec1.yaml


> try other methods, similar to configMap...

apiVersion: v1
kind: Secret
metadata:
  name: secret2
  
data:
  application.properties: |
    database_ip=encrypted_value
    database_password=encrypted_value
    database_username=encrypted_value

  admin.properties: |
    username=encrypted_value
    password=encrypted_value
  

>--------------------------injecting secret into pod-------------------------------------------

>a) Injecting selected variables as Env variable in to pod....

apiVersion: v1
kind: Pod 
metadata: 
  name: pod1
spec: 
  containers:
    - name: cont
      image: nginx
      env:
        - name: my-var
          valueFrom: 
            secretKeyRef:
              key: key1    #key in the secret
              name: sec4   #name of secrete

        - name: my-var2
          valueFrom: 
            secretKeyRef:
              key: key2
              name: sec4    

>Injecting all variable from secrets in to container

apiVersion: v1
kind: Pod 
metadata: 
  name: pod2
spec: 
  containers:
    - name: cont          
      image: nginx
      envFrom:                # injecting all varible from file
       - secretRef: 
          name: sec4             



>injecting all varibles as a file in to pod..

apiVersion: v1
kind: Pod 
metadata: 
  name: pod3
spec: 
  containers:
    - name: cont         
      image: nginx

      volumeMounts:
        - name: testvol
          mountPath: "/secrets"  
          readOnly: true

  volumes:                      # match the name
    - name: testvol               
      secret: 
        secretName: sec4         


>injecting selected varible as a file in to pod..

apiVersion: v1
kind: Pod 
metadata: 
  name: pod3
spec: 
  containers:
    - name: cont         
      image: nginx

      volumeMounts:
        - name: testvol
          mountPath: "/secrets"  
          readOnly: true

  volumes:                      # match the name
    - name: testvol               
      secret: 
        secretName: sec4 
        items:
          - key: key1
            path: "var-1"
          - key: key2
            path: "var-2"

>--------------------------------------------------------------------------------------------------------