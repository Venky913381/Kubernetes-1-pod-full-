>

If there are external IPs/ External Name that route to one or more cluster nodes, 
Kubernetes services can be exposed on those external IPs.

Traffic that ingresses into the cluster with the external IP(as destination IP)/External Name, 
on the service port, will be routed to one of the service endpoints. 
externalIPs are not managed by Kubernetes and are the responsibility of the cluster administrator.


*EXTERNAL_NAME_

>Services of type ExternalName map a Service to a DNS name, not to a typical selector 
>such as my-service or cassandra. You specify these Services with the spec.externalName parameter.

>This Service definition, for example, maps the my-service Service in the prod namespace 
>to my.database.example.com

apiVersion: v1
kind: Service
metadata:
  name: my-service
  namespace: prod
spec:
  type: ExternalName
  ports:
      port: 80
  externalName: my.database.example.com   

>so above service can be mapped to external DNS "my.database.example.com ".

>in short, External name service map to the external DNS , this may be the databases out of cluster or databases
>stored externally, or any other microservice pod that is deployed on other cluster and any microservice which
>is completly external but can be accessed by external name service from within the cluster.


flow:
>request------>[k8s_cluster----->External name service]----> [out_of_cluster]--[DNS]-->[microservice/database]

>--------------------------------------------------------------------------------------------------------------

ExternalName accepts an IPv4 address string, but as a DNS name comprised of digits, 
not as an IP address. ExternalNames that resemble IPv4 addresses are not resolved by 
CoreDNS or ingress-nginx because ExternalName is intended to specify a canonical DNS name. 
To hardcode an IP address, consider using headless Services.


*EXTERNAL_IP_

If there are external IPs that route to one or more cluster nodes, Kubernetes Services 
can be exposed on those external-IPs. 

>Traffic that ingresses into the cluster with the external IP (as destination IP), 
>on the Service port, will be routed to one of the Service endpoints. 
>external-IPs are not managed by Kubernetes and are the responsibility of the cluster administrator.

In the Service spec, externalIPs can be specified along with any of the ServiceTypes. 
>In the example below, "my-service" can be accessed by clients on "80.11.12.10:80" (externalIP:port)

apiVersion: v1
kind: Service
metadata:
  name: my-service
spec:
  selector:
    app.kubernetes.io/name: MyApp
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 9376
  externalIPs:
    - 80.11.12.10


>so above service can be mapped to external IP 80.11.12.10.

>in short, External ip service map to the external ip , this may be the databases out of cluster or databases
>stored externally, or any other microservice pod that is deployed on other cluster and any microservice which
>is completly external but can be accessed by external ip service from within the cluster.



flow:
>request------>[k8s_cluster----->External ip service] ----> [out_of_cluster]--[IP]-->[microservice/database]

>--------------------------------------------------------------------------------------------------------------